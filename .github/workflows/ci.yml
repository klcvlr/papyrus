# Kotlin CI with Gradle
# For details, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Kotlin CI with Gradle

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Define application version: YYYYMMDD-HHMMSS-SHORT_COMMIT_HASH  # It's the 'build time' for now but, might change this to 'commit time' instead.
      #  WARNING - I like the build date but, it breaks the ability to keep the same version across multiple builds of the same commit.
      - name: Compute Version
        run: |
          SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
          BUILD_DATE=$(date -u +'%Y%m%d-%H%M%S')
          VERSION="${BUILD_DATE}-${SHORT_COMMIT_HASH}"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Login to AWS ECR (logs in and sets the registry URL as an output)
      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      # Build with Gradle (lints, tests, builds, and creates a Docker image tagged with the version)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
        with:
          arguments: bootBuildImage --info
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          CONTAINER_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          VERSION: ${{ env.VERSION }}

      # Push Docker Image to AWS ECR
      # WARNING - ECR charges per GB used, but provides no way to check the total space used by the layers in a registry.
      - name: Push Docker Image to Amazon ECR
        run: docker push ${{ steps.ecr-login.outputs.registry }}/papyrus:${{ env.VERSION }}

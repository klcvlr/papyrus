# Kotlin CI with Gradle
# For details, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Kotlin CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
        with:
          arguments: build --info
        env:
          AWS_REGION: ${{ vars.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Define Build Environment Variables
        run: |
          SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
          TAG_DATE=$(date +'%Y%m%d')
          IMAGE_TAG="${TAG_DATE}-${SHORT_COMMIT_HASH}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build Docker Image
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
        with:
          arguments: bootBuildImage --imageName=papyrus:${{ env.IMAGE_TAG }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker Image to Amazon ECR
        run: |
          docker tag papyrus:$IMAGE_TAG ${{ steps.ecr-login.outputs.registry }}/papyrus:$IMAGE_TAG
          docker push ${{ steps.ecr-login.outputs.registry }}/papyrus:$IMAGE_TAG
